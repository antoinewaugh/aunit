import sys, os, logging
import csv
from pysys import log
from pysys.constants import *
from pysys.basetest import BaseTest
from aunit.framework.AUNITCorrelator import AUNITCorrelatorHelper

class PySysTest(BaseTest):

	def execute(self):
		log.setLevel(logging.WARNING)
		correlator = AUNITCorrelatorHelper(self)
		correlator.start(logfile='correlator.log')
		correlator.injectBundles(targets={!depends_bundles})
		{!inject_depends_file_command}
		correlator.receive(filename='aunit.out', channels=['UnitTest'], suppressBatch=True)
		correlator.injectMonitorscript(filenames='TestEvent.mon')
		correlator.injectMonitorscript(filenames='TestRunner.mon')
		self.waitForSignal(file='correlator.log', expr='TESTS COMPLETE', condition='==1', timeout={!timeout}, poll=0.1)
		correlator.flush()

	def validate(self):
		assertfile = os.path.join(self.output, 'aunit.out')
		if os.path.exists(assertfile):
			with open(assertfile, 'rt') as f:
			    reader = csv.reader(f, delimiter='\t')
			    for row in reader:
			    	self.assertTrue(expr=row[3]=="PASSED", assertMessage='{}:{}'.format(row[0], row[1])	)
		else:
			self.assertTrue(expr=False, assertMessage='Unable to locate aunit assert file.')

		self.assertLineCount(file='correlator.log', expr=' 0 successful', condition="==0",  assertMessage=" All tests perform an assert ")
		self.assertLineCount(file='correlator.log', expr='TESTS COMPLETE', condition="==1", assertMessage="*** ALL TESTS COMPLETE CHECK *** ")			
		log.setLevel(logging.INFO)


