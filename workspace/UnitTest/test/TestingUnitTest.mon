//*****************************************************************************
// Title:         Sample
// Description:   Sample description
// Dependencies:  None
// Author:        Antoine
//
//*****************************************************************************

package com.aunit.mytestpackage;

using com.aunit.Asserter;

//@Depends UnitTest/test/testHelper1.mon, UnitTest
event TestingUnitTest  {
	
	Asserter asserter;
	
	//@Test		
	action test_001 {
		asserter.assertTrue("test_001", true);
		asserter.assertTrue("test_001", not false = true);	}
		
	//@Test		
	action test_002 {
		integer a := 101;
		integer b := 101;
		asserter.assertInteger("test_002", a, b);
	}
	
	
	//@Test		
	action test_003 {
		float a := 10.1;
		float b := 10.1;
		asserter.assertFloat("test_003", a, b);
	}

	//@Test		
	action test_004 {
		string a := "this is one good string";
		string b := "this is one good string";
		asserter.assertString("test_004", a, b);
	}
	
	//@Test
	action test_Asynchronous_001(action<> cbDone) {
		on wait(1.0) {
			asserter.assertTrue("test_Asycnrhonous_001", true=true);
			cbDone();
		}
	}
	
	//@Test		
	action test_005 {
		asserter.assertTrue("test_005", true);
	}
	
	
	//@Test
	action test_Asynchronous_002(action<> cbDone) {
		asserter.assertTrue("test_Asycnrhonous_002", true=true);
		cbDone();
	}

	//@Test
	action test_Context_001(action<> cbDone) {
		asserter.assertTrue("test_Context_001 - Main", true);
		spawn initTtest_Asynchronous_Context(cbDone) to context("test_Context_001",false);
	}
	
	action initTtest_Asynchronous_Context(action<> cbDone) {
		asserter.assertTrue("test_Context_001 - Context", true);
		cbDone();		
	}

	//@Test		
	action test_006 {
		asserter.assertTrue("test_006", true);
	}

	//@Test 
	action test_007 {
		TestEvent1 testEvent1 := TestEvent1("string");
		asserter.assertString("Can Reference testHelper1.mon", testEvent1.value, "string");
	}
	
	//@Initialise
	action init(action<> cbInit) {
		cbInit();
	}	
	
	//@Setup
	action setup(action<> cbSetup) { 
		log "Running setup";
		cbSetup();
	}
	
	//@Teardown
	action teardown(action<> cbTeardown) {
		log "Running teardown";
		cbTeardown();
	}
	
}


